name: Enhanced Daily Contributions

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily
  workflow_dispatch:  # Allow manual trigger

jobs:
  make-contribution:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Configure Git user
        run: |
          git config --global user.email "ramincsy2@gmail.com"
          git config --global user.name "ramincsy"

      - name: Get current date info
        run: |
          echo "day=$(date +'%d')" >> $GITHUB_ENV
          echo "month=$(date +'%m')" >> $GITHUB_ENV
          echo "year=$(date +'%Y')" >> $GITHUB_ENV

      - name: Generate daily content
        run: |
          python generate_content.py || echo "No content generated."

      - name: Stash changes and pull latest
        run: |
          git stash || echo "No local changes to stash"
          git pull origin ramincsy-patch-1 --rebase || echo "No updates to pull"
          git stash pop || echo "No stashed changes to apply"

      - name: Stage and Commit changes
        run: |
          git add .
          if git diff-index --quiet HEAD; then
            echo "No changes to commit."
            echo "SKIP_PULL_REQUEST=true" >> $GITHUB_ENV
          else
            git commit -m "Automated daily contribution ðŸš€"
            echo "SKIP_PULL_REQUEST=false" >> $GITHUB_ENV
          fi

      - name: Push changes
        if: env.SKIP_PULL_REQUEST == 'false'
        run: |
          git push origin ramincsy-patch-1 || echo "Push failed. Trying again..."
          sleep 5  # Wait to ensure push is complete

      - name: Create Pull Request
        if: env.SKIP_PULL_REQUEST == 'false'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_TOKEN2 }}
          commit-message: "Automated PR for daily contributions ðŸš€"
          title: "Daily Contribution: ${{ env.year }}-${{ env.month }}-${{ env.day }}"
          body: |
            This Pull Request was automatically generated to add daily contributions.
          branch: daily-contribution-${{ env.year }}-${{ env.month }}
          base: ramincsy-patch-1

  manage-issues:
    runs-on: ubuntu-22.04
    steps:
      - name: Create a new issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_TOKEN2 }}
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Daily Issue: ${new Date().toISOString().split('T')[0]}`,
              body: 'This is an automatically generated issue for daily activity.',
            });
            console.log(`Created issue #${issue.data.number}`);
            await new Promise(resolve => setTimeout(resolve, 5000)); // Ensure delay to prevent rate limit

      - name: Close all open issues
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_TOKEN2 }}
          script: |
            async function delay(ms) {
              return new Promise(resolve => setTimeout(resolve, ms));
            }

            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "open",
            });

            if (issues.data.length === 0) {
              console.log("No open issues found.");
              return;
            }

            for (const issue of issues.data) {
              console.log(`Processing issue #${issue.number}: ${issue.title}`);

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `This issue is being closed automatically as part of the daily workflow. Thank you for your contributions!`,
              });

              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: "closed",
              });

              console.log(`Closed issue #${issue.number}.`);
              await delay(5000); // Delay to avoid hitting rate limits
            }
